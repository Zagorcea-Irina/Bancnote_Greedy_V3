#include <iostream>
#include <bits/stdc++.h>
using namespace std;

//Массив со всеми купюрами
//int bills[] = { 1, 5, 10, 20, 50, 100, 200, 500, 1000 };
//Узнаем длинну массива  sizeof(deno) - размер всего массива в байтах делим на размер одного элемента
//int bills_size = sizeof(bills) / sizeof(bills[0]);

//Функция которая возвращает оптималные банкноты для заданной суммы пременная V это праметр который принимает сумму
void countBills(int V, int bills_size, int bills[])
{
    //Инициализируем вектор для хранения подходяших банкнот
    //Выбрали вектор так как он может динамично изменять свой размер в отличии от массива
    vector<int> optin_bills;
    int bils_count[bills_size]; //в этом массиве будем хранить количиство банкнот

    //Проходим по всему массиву с купюрами проходим с конца так как самые большие купюры у нас в конце массива
    for (int i = bills_size - 1; i >= 0; i--) {

        bils_count[i] = 0; //по умолчанию каждую банкноту мы используем 0 раз

        //Проверяем если выбранная банкнота подходит для нашой суммы
        //Проверяем в цикле так как для большой суммы максимальная купюра может дублироваться
        while (V >= bills[i]) { //условие проверяет если банкнота меньши суммы

            V -= bills[i]; //вычитаем подходяшую банкноту из нашой суммы(или остатка от суммы)

            bils_count[i]++; //с каждым проходом инкрементируем количество банкнот по которой разбиваем число

            optin_bills.push_back(bills[i]); //coхраняем подходяшюю банкноту в наш вектор
        }
    }

    if (V > 0) { //Проверяем остадся ли остаток после разбития числа на банкноты (в таком случае у нас будет ошибка так как мы не можем выдать указанную сумму из-за нехватки банкнот)
        cout << "Данная сумма не может быть оплачена существующими банкнотами";

    } else {
        //Выводим вектор с подходяшими купюрами на экран
        for (int i = 0; i < optin_bills.size(); i++) {
            cout << optin_bills[i] << "  ";
        }

       cout << endl;
       cout << "------------------------------------------------------------------------------------" <<endl;
        //Выводим количество необходимых банкнот
        for (int j = 0; j < bills_size; j++) {
            cout << bills[j] << "X" << bils_count[j] << endl;
        }
    }
}

int * sortArray(int size_arr, int arr1[])
{
    int temp; // временная переменная для обмена элементов местами

    // Сортировка массива пузырьком
    for (int i = 0; i < size_arr - 1; i++) {
        for (int j = 0; j < size_arr - i - 1; j++) {
            if (arr1[j] > arr1[j + 1]) {
                // меняем элементы местами
                temp = arr1[j];
                arr1[j] = arr1[j + 1];
                arr1[j + 1] = temp;
            }
        }
    }

    // Вывод отсортированного массива на экран
    cout << "Отсортированный массив: ";
    for (int i = 0; i < size_arr; i++) {
        cout << arr1[i] << " ";
    }
    cout << endl;

    return arr1;
}

int main()
{
    setlocale(LC_ALL, "Russian"); //устанавливаем Locale настройка чтобы можно было вывести текст на русском

    int *arr; // указатель для выделения памяти под массив
    int size; // переменная для размер массива

    //Ввод количества элементов массива
    cout << "Введите количество банкнот ";
    cin >> size;

    if (size <= 0) {
        // Размер масива должен быть положитлеьным
        cout << "Размер массива должен быть больше 0!";

        return 1;
    }


    arr = new int[size]; // выделение памяти под массив

    // заполнение массива
    for (int i = 0; i < size; i++) {
        cout << "arr[" << i << "] = ";
        cin >> arr[i];
    }

    // Вывод отсортированного массива на экран
    cout << "Введенные банкноты: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    int * sort_array = sortArray(size, arr);
    int sum;
    cout << "Введите сумму и нажмите Enter: ";
    cin >> sum; //принимаем введенное число с клавиатуры
    cout << "Введеная вами сумма " << sum << " состоит из следующих купюр: ";
    countBills(sum, size, sort_array);

    return 0;
}
